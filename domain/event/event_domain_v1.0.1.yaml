# OpenAPI version identifier - required for OpenAPI 3.0 domains
openapi: 3.0.3

#######################
# Optional info section
#######################
info:
  title: DCSA Event Components
  description: |
    Common components for DCSA Events. This domain is central for all Event Hubs and is used by
    - Event Hub (General event hub for <a href="#/components/schemas/transportEvent">TransportEvent</a>, <a href="#/components/schemas/equipmentEvent">EquipmentEvent</a>, <a href="#/components/schemas/shipmentEvent">ShipmentEvents</a> and <a href="#/components/schemas/operationsEvent">OperationsEvent</a>)
    - T&T v2.1 and later (event hub for <a href="#/components/schemas/transportEvent">TransportEvent</a>, <a href="#/components/schemas/equipmentEvent">EquipmentEvent</a> and <a href="#/components/schemas/shipmentEvent">ShipmentEvents</a>)
    - Documentation Hub used by eBL (event hub for <a href="#/components/schemas/shipmentEvent">ShipmentEvents</a>)
    - OVS Hub used by OVS (event hub for <a href="#/components/schemas/transportEvent">TransportEvent</a> and <a href="#/components/schemas/operationsEvent">OperationsEvent</a>)
  version: 1.0.1

components:
  parameters:

    ####################
    ## Header parameters
    ####################

    apiVersion:
      in: header
      name: API-Version
      required: true
      schema:
        type: string
        example: 1.0.0
      description: |
        SemVer used to indicate the version of the contract (API version) returned.
    notificationSignature:
      in: header
      name: Notification-Signature
      required: true
      description: |
        the Notification-Signature is used to sign the notification. The header has the following format: 

        <i>Notification-Signature&#58; &lt;signature-type&gt;=&lt;signature&gt;</i>

        The <i>&lt;signature-type&gt;</i> part is a keyword that determines which algorithm was used to compute the signature.

        The signature <b>MUST</b> cover the entire request body of the request including whitespace and newlines. The content <b>MUST</b> decoded into bytes using the UTF-8 encoding before computing the signature. None of the HTTP headers nor the request URL is covered by the signature.
        
        Supported signature typies are&#58;
        - sha256
        
        Example&#58; sha256=ae688919f5e31f4c210ca6af362ce4d9ed87acfb51c1721a8507ee395de5e2de
      schema:
        type: string
        pattern: '\s*([a-zA-Z0-9-_+]+=[0-9a-fA-F]+)\s*'
        example: 'sha256=ae688919f5e31f4c210ca6af362ce4d9ed87acfb51c1721a8507ee395de5e2de'
    signatureHeader:
      in: header
      name: Signature
      required: true
      description: |
        The signature certifying the request originates from the carrier.
      deprecated: true
      schema:
        properties:
          keyId:
            type: string
            format: uuid
            example: 123e4567-e89b-12d3-a456-426614174000
          created:
            type: integer
            example: 1591960384 
          headers:
            type: string
            example: '(request-target) (created) date host'
          signature:
            type: string
            example: aGkgZnJvbSBkZW5tYXJr
    subscriptionIDHeader:
      in: header
      name: Subscription-ID
      required: true
      description: 'The ID of the subscription triggering the event being sent.'
      schema:
        type: string
        format: uuid
        example: 123e4567-e89b-12d3-a456-426614174000

    #################
    # Path parameters
    #################

    eventID:
      in: path
      name: eventID
      schema:
        $ref: '#/components/schemas/eventID'
      required: true
      deprecated: true
      description: 'The ID of the event to receive'
      example: 123e4567-e89b-12d3-a456-426614174000
    subscriptionID:
      in: path
      name: subscriptionID
      schema:
        $ref: '#/components/schemas/subscriptionID'
      required: true
      description: 'The universal unique ID of the subscription.'
      example: 123e4567-e89b-12d3-a456-426614174000

    ##################
    # Query parameters
    ##################
    
    bookingReference:
      in: query
      name: bookingReference
      deprecated: true
      description: Deprecated - use carrierBookingReference instead.
      required: false
      schema:
        type: string
    carrierBookingReference:
      in: query
      name: carrierBookingReference
      description: |
        A set of unique characters provided by carrier to identify a booking.
        
        Specifying this filter will only return events related to this particular carrierBookingReference.
      schema:
        $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/1.0.1#/components/schemas/carrierBookingReference'
    carrierVoyageNumber:
      in: query
      name: carrierVoyageNumber
      description: |
        Filter on the vessel operator-specific identifier of the Voyage.
        
        Specifying this filter will only return events related to this particular carrierVoyageNumber.
      required: false
      schema:
        $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/1.0.1#/components/schemas/carrierVoyageNumber'
    carrierServiceCode:
      in: query
      name: carrierServiceCode
      description: |
        Filter on the carrier specific identifier of the service.
        
        Specifying this filter will only return events related to this particular carrierServiceCode.
      required: false
      schema:
        $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/1.0.1#/components/schemas/carrierServiceCode'
    equipmentEventTypeCode:
      in: query
      name: equipmentEventTypeCode
      explode: false
      style: form
      description: |
        Unique identifier for equipmentEventTypeCode.
        - LOAD (Loaded)
        - DISC (Discharged)
        - GTIN (Gated in)
        - GTOT (Gated out)
        - STUF (Stuffed)
        - STRP (Stripped)

        It is possible to select multiple values by comma (,) separating them. For multiple values the OR-operator is used. For example <i>equipmentEventTypeCode=GTIN,GTOT</i> matches <b>both</b> Gated in (GTIN) and Gated out (GTOT) equipment events.
        
        Default is all equipmentEventTypeCodes.
        
        This filter is only relevant when filtering on EquipmentEvents
      example: GTIN,GTOT
      # Values to be inserted again in next version
      # - PICK (Pick-up)
      # - DROP (Drop-off)
      # - RSEA (Resealed)
      # - RMVD (Removed)
      # - INSP (Inspected)
      schema:
        default: LOAD,DISC,GTIN,GTOT,STUF,STRP
        # Values to be inserted again in next version
        # default: LOAD,DISC,GTIN,GTOT,STUF,STRP,PICK,DROP,RSEA,RMVD,INSP
        type: array
        items:
          $ref: '#/components/schemas/equipmentEventTypeCode'
    equipmentReference:
      in: query
      name: equipmentReference
      description: |
        Will filter by the unique identifier for the equipment, which should follow the BIC ISO Container Identification Number where possible.
        
        Specifying this filter will only return events related to this particular equipmentReference
      required: false
      schema:
        $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/1.0.1#/components/schemas/equipmentReference'
    eventCreatedDateTime:
      in: query
      name: eventCreatedDateTime
      description: |
        Limit the result based on the creating date of the event. It is possible to use operators on this query parameter. This is done by adding a colon followed by an operator at the end of the queryParameterName (before the =)
        
        <i>eventCreatedDateTime<b>&#58;gte</b>=2021-04-01T14&#58;12&#58;56+01&#58;00</i>
        
        would result in all events created &#8805; 2021-04-01T14&#58;12&#58;56+01&#58;00
        
        The following operators are supported
        - &#58;gte (&#8805; Greater than or equal)
        - &#58;gt (&#62; Greater than)
        - &#58;lte (&#8804; Less than or equal)
        - &#58;lt (&#60; Less than)
        - &#58;eq (&#61; Equal to)
        
        If no operator is provided, a <b>strictly equal</b> is used (this is equivalent to <b>&#58;eq</b> operator).
      required: false
      example: 2021-04-01T14:12:56+01:00
      schema:
        $ref: '#/components/schemas/eventCreatedDateTime'
    operationsEventTypeCode:
      in: query
      name: operationsEventTypeCode
      description: |
        The code to identify the type of event that is related to the operation
        - STRT (Started)
        - CMPL (Completed)
        - ARRI (Arrived)
        - DEPA (Departed)

        It is possible to select multiple values by comma (,) separating them. For multiple values the OR-operator is used. For example <i>operationsEventTypeCode=ARRI,CMPL</i> matches <b>both</b> Arrived (ARRI) and Completed (CMPL) operations events.
        
        Default is all operationsEventTypeCodes.
      example: ARRI,CMPL
      schema:
        default: STRT,CMPL,ARRI,DEPA
        type: array
        items:
          $ref: '#/components/schemas/operationsEventTypeCode'
    scheduleID:
      in: query
      name: scheduleID
      description: |
        ID uniquely identifying a schedule, to filter events by.
        
        This filter was added by mistake and is thus deprecated.
      required: false
      schema:
        $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/1.0.1#/components/schemas/scheduleID'
      deprecated: true
    shipmentEventTypeCode:
      in: query
      name: shipmentEventTypeCode
      explode: false
      style: form
      description: |
        The status of the document in the process to filter by. Possible values are
        - RECE (Received)
        - DRFT (Drafted)
        - PENA (Pending Approval)
        - PENU (Pending Update)
        - REJE (Rejected)
        - APPR (Approved)
        - ISSU (Issued)
        - SURR (Surrendered)
        - SUBM (Submitted)
        - VOID (Void)
        - CONF (Confirmed)
        
        It is possible to select multiple values by comma (,) separating them. For multiple values the OR-operator is used. For example <i>shipmentEventTypeCode=RECE,DRFT</i>  Matches <b>both</b> Received (RECE) and Drafted (DRFT) shipment events.
        
        Default is all shipmentEventTypeCodes.
        
        This filter is only relevant when filtering on ShipmentEvents
      example: RECE,DRFT
      schema:
        default: RECE,DRFT,PENA,PENU,REJE,APPR,ISSU,SURR,SUBM,VOID,CONF
        type: array
        items:
          $ref: '#/components/schemas/shipmentEventTypeCode'
    shippingInstructionID:
      in: query
      name: shippingInstructionID
      description: |
        The Shipping Instruction ID identifier is an identifier that links to a shipping instruction
      required: false
      schema:
        $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/1.0.1#/components/schemas/shippingInstructionID'
    transportCallID:
      in: query
      name: transportCallID
      description: |
        ID uniquely identifying a transport call, to filter events by.
        
        Specifying this filter will only return events related to this particular transportCallID
      required: false
      schema:
        $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/1.0.1#/components/schemas/transportCallID'
    transportDocumentID:
      in: query
      name: transportDocumentID
      description: |
        A unique id to identify a transport document.
        
        Deprecated - use transportDocumentReference instead transportDocumentReference
      deprecated: true
      schema:
        type: string
        format: uuid
    transportDocumentReference:
      in: query
      name: transportDocumentReference
      description: |
        A unique number reference allocated by the shipping line to the transport document and the main number used for the tracking of the status of the shipment.
        
        Specifying this filter will only return events related to this particular transportDocumentReference
      required: false
      schema:
        $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/1.0.1#/components/schemas/transportDocumentReference'
    transportDocumentTypeCode:
      in: query
      name: transportDocumentTypeCode
      explode: false
      style: form
      description: |
        Specifies the type of the transport document (a Bill of Lading (BOL) or a Sea Waybill (SWB)) to filter by.
        
        Default is both.
      required: false
      example: SWB
      schema:
        default: BOL,SWB
        type: array
        items:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/1.0.1#/components/schemas/transportDocumentType'
    transportEventTypeCode:
      in: query
      name: transportEventTypeCode
      explode: false
      style: form
      description: |
        Identifier for type of Transport event to filter by
        - ARRI (Arrived)
        - DEPA (Departed)

        It is possible to select multiple values by comma (,) separating them. For multiple values the OR-operator is used. For example <i>transportEventTypeCode=ARRI,DEPA</i> matches <b>both</b> Arrived (ARRI) and Departed (DEPA) transport events.
        
        Default is all transportEventTypeCodes.
        
        This filter is only relevant when filtering on TransportEvents
      example: ARRI,DEPA
      schema:
        default: ARRI,DEPA
        type: array
        items:
          $ref: '#/components/schemas/transportEventTypeCode'
    vesselIMONumber:
      in: query
      name: vesselIMONumber
      description: |
        The identifier of vessel for which schedule details are published. Depending on schedule type, this may not be available yet.
        
        Specifying this filter will only return events related to this particular vesselIMONumber.
      required: false
      schema:
        $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/1.0.1#/components/schemas/vesselIMONumber'

  ####################
  # Common data models
  ####################
  
  schemas:
  
    ###################
    # Base Event object
    ###################

    baseEventBody:
      type: object
      description: |
        The Event entity is described as a generalization of all the specific event categories. An event always takes place in relation to a shipment and can additionally be linked to a transport or an equipment
      allOf:
        - type: object
          properties:
            eventType:
              $ref: '#/components/schemas/eventType'
        - type: object
          properties:
            eventClassifierCode:
              $ref: '#/components/schemas/eventClassifierCode'
        - type: object
          properties:
            eventDateTime:
              $ref: '#/components/schemas/eventDateTime'
      required:
        - eventType
        - eventClassifierCode
        - eventDateTime
    
    baseEvent:
      type: object
      allOf:
        - type: object
          properties:
            eventID:
              $ref: '#/components/schemas/eventID'
        - type: object
          properties:
            eventCreatedDateTime:
              $ref: '#/components/schemas/eventCreatedDateTime'
        - $ref: '#/components/schemas/baseEventBody'
      required:
        - eventCreatedDateTime


    ##########################
    # Shipment Event object
    ##########################


    baseShipmentEvent:
      type: object
      description: |
        The shipment event entity is a specialization of the event entity to support specification of data that only applies to a shipment event.
      allOf:
        #Overriding this property to have correct payload response examples
        - type: object
          properties:
            eventType:
              example: SHIPMENT
              enum:
                - SHIPMENT
        #Overriding this property to have correct payload response examples
        - type: object
          properties:
            eventDateTime:
              description: |
                Value for eventDateTime must be the same value as eventCreatedDateTime
        #Overriding this property to have correct payload response examples
        - type: object
          properties:
            eventClassifierCode:
              description: |
                Code for the event classifier can be
                - ACT (Actual)
                - PLN (Planned)
                - EST (Estimated)
              enum:
                - ACT
                - PLN
                - EST
              example: ACT
        - type: object
          properties:
            shipmentEventTypeCode:
              $ref: '#/components/schemas/shipmentEventTypeCode'
        - type: object
          properties:
            documentID:
              $ref: '#/components/schemas/documentID'
        - type: object
          properties:
            documentTypeCode:
              $ref: '#/components/schemas/documentTypeCode'
        - type: object
          properties:
            shipmentInformationTypeCode:
              $ref: '#/components/schemas/shipmentInformationType'
        - type: object
          properties:
            reason:
              $ref: '#/components/schemas/reason'
        
        #####################################
        # Deprecated ShipmentEvent attributes
        #####################################
        
        - type: object
          properties:
            eventTypeCode:
              $ref: '#/components/schemas/eventTypeCode'
        - type: object
          properties:
            eventTypeCode:
              description: |
                Unique identifier for Event Type Code. For shipment events this can be
                - RECE (Received)
                - CONF (Confirmed)
                - ISSU (Issued)
                - APPR (Approved)
                - SUBM (Submitted)
                - SURR (Surrendered)
                - REJE (Rejected)
                - PENA (Pending approval)
                
                Deprecated - use shipmentEventTypeCode instead
              deprecated: true
              example: RECE
              enum:
                - RECE
                - CONF
                - ISSU
                - APPR
                - SUBM
                - SURR
                - REJE
                - PENA
        - type: object
          properties:
            shipmentID:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/1.0.1#/components/schemas/shipmentID'
        - type: object
          properties:
            shipmentID:
              description: |
                ID uniquely identifying a shipment.
                
                Deprecated - this is replaced by documentID which can contain different values depending on the value of the documentTypeCode field
              deprecated: true
        - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DOCUMENTATION_DOMAIN/1.0.1#/components/schemas/references'
      required:
        - documentID
        - shipmentEventTypeCode
        - documentTypeCode

    shipmentEventBody:
      type: object
      description: |
        The shipment event entity is a specialization of the event entity to support specification of data that only applies to a shipment event.
        
        <b>NB:</b> This version of the entity is to be used when creating new Shipment events - this does not contain an eventID or an eventCreatedDateTime
      allOf:
        - $ref: '#/components/schemas/baseEventBody'
        - $ref: '#/components/schemas/baseShipmentEvent'

    shipmentEvent:
      type: object
      allOf:
        - $ref: '#/components/schemas/baseEvent'
        - $ref: '#/components/schemas/baseShipmentEvent'


    ###############################
    # Transport Event object
    ###############################


    baseTransportEvent:
      type: object
      description: |
        The transport event entity is a specialization of the event entity to support specification of data that only applies to a transport event.
      allOf:
        #Overriding this property to have correct payload response examples
        - type: object
          properties:
            eventType:
              example: TRANSPORT
              enum:
                - TRANSPORT
        #Overriding this property to have correct payload response examples
        - type: object
          properties:
            eventClassifierCode:
              description: |
                Code for the event classifier can be
                - ACT (Actual)
                - PLN (Planned)
                - EST (Estimated)
              enum:
                - ACT
                - PLN
                - EST
              example: ACT
        - type: object
          properties:
            transportEventTypeCode:
              $ref: '#/components/schemas/transportEventTypeCode'
        - type: object
          properties:
            delayReasonCode:
              $ref: '#/components/schemas/delayReasonCode'
        - type: object
          properties:
            vesselScheduleChangeRemark:
              $ref: '#/components/schemas/vesselScheduleChangeRemark'
        - type: object
          properties:
            changeRemark:
              $ref: '#/components/schemas/changeRemark'
        - type: object
          properties:
            transportCallID:
              allOf:
                - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/1.0.1#/components/schemas/transportCallID'
                - deprecated: true
                - description: 'The unique identifier for a transport call<br><br>Deprecated - not needed as the TransportCall object is included'
        - type: object
          properties:
            transportCall:
              $ref: '#/components/schemas/transportCall'
        - type: object
          properties:
            documentReferences:
              $ref: '#/components/schemas/documentReferences'
        - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DOCUMENTATION_DOMAIN/1.0.1#/components/schemas/references'

        ######################################
        # Deprecated TransportEvent attributes
        ######################################
        
        - type: object
          properties:
            eventTypeCode:
              $ref: '#/components/schemas/eventTypeCode'
        - type: object
          properties:
            eventTypeCode:
              description: |
                Unique identifier for Event Type Code, for transport events this is either
                - ARRI (Arrival)
                - DEPA (Departure)
                
                Deprecated - use transportEventTypeCode instead
              deprecated: true
              enum:
                - ARRI
                - DEPA
      required:
        - transportCall
        - transportEventTypeCode

    transportEventBody:
      type: object
      description: |
        The transport event entity is a specialization of the event entity to support specification of data that only applies to a transport event.
        
        <b>NB:</b> This version of the entity is to be used when creating new Transport events - this does not contain an eventID or an eventCreatedDateTime
      allOf:
        - $ref: '#/components/schemas/baseEventBody'
        - $ref: '#/components/schemas/baseTransportEvent'

    transportEvent:
      type: object
      allOf:
        - $ref: '#/components/schemas/baseEvent'
        - $ref: '#/components/schemas/baseTransportEvent'


    ########################
    # Equipment Event object
    ########################


    baseEquipmentEvent:
      type: object
      description: |
        The equipment event entity is a specialization of the event entity to support specification of data that only applies to an equipment event.
      allOf:
        #Overriding this property to have correct payload response examples
        - type: object
          properties:
            eventType:
              example: EQUIPMENT
              enum:
                - EQUIPMENT
        #Overriding this property to have correct payload response examples
        - type: object
          properties:
            eventClassifierCode:
              description: |
                Code for the event classifier can be
                - PLN (Planned)
                - ACT (Actual)
                - EST (Estimated)
              enum:
                - PLN
                - ACT
                - EST
              example: EST
        - type: object
          properties:
            equipmentEventTypeCode:
              $ref: '#/components/schemas/equipmentEventTypeCode'
        - type: object
          properties:
            equipmentReference:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/1.0.1#/components/schemas/equipmentReference'
        - type: object
          properties:
            ISOEquipmentCode:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/1.0.1#/components/schemas/ISOEquipmentCode'
        - type: object
          properties:
            emptyIndicatorCode:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/1.0.1#/components/schemas/emptyIndicatorCode'
        - type: object
          properties:
            transportCallID:
              allOf:
                - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/1.0.1#/components/schemas/transportCallID'
                - deprecated: true
                - description: 'The unique identifier for a transport call<br><br>Deprecated - not needed as the TransportCall object is included'
        - type: object
          properties:
            transportCall:
              $ref: '#/components/schemas/transportCall'
        - type: object
          properties:
            documentReferences:
              $ref: '#/components/schemas/documentReferences'
        - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DOCUMENTATION_DOMAIN/1.0.1#/components/schemas/references'
        - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DOCUMENTATION_DOMAIN/1.0.1#/components/schemas/seals'

        ######################################
        # Deprecated EquipmentEvent attributes
        ######################################

        - type: object
          properties:
            eventTypeCode:
              $ref: '#/components/schemas/eventTypeCode'
        - type: object
          properties:
            eventTypeCode:
              description: |
                Unique identifier for Event Type Code, for transport events this is either
                - LOAD (Loaded)
                - DISC (Discharged)
                - GTIN (Gated in)
                - GTOT (Gated out)
                - STUF (Stuffed)
                - STRP (Stripped)
                
                Deprecated - use equipmentEventTypeCode instead
              deprecated: true
              enum: 
                - LOAD
                - DISC
                - GTIN
                - GTOT
                - STUF
                - STRP
      required:
        - emptyIndicatorCode
        - transportCall
        - equipmentEventTypeCode

    equipmentEventBody:
      type: object
      description: |
        The equipment event entity is a specialization of the event entity to support specification of data that only applies to an equipment event.
        
        <b>NB:</b> This version of the entity is to be used when creating new Equipment events - this does not contain an eventID or an eventCreatedDateTime
      allOf:
        - $ref: '#/components/schemas/baseEventBody'
        - $ref: '#/components/schemas/baseEquipmentEvent'

    equipmentEvent:
      type: object
      allOf:
        - $ref: '#/components/schemas/baseEvent'
        - $ref: '#/components/schemas/baseEquipmentEvent'


    #########################
    # Operations Event object
    #########################


    baseOperationsEvent:
      type: object
      description: |
        The operations event entity is a specialization of the event entity to support specification of data that only applies to an operations event.
      allOf:
        #Overriding this property to have correct payload response examples
        - type: object
          properties:
            eventType:
              example: OPERATIONS
              enum:
                - OPERATIONS
        #Overriding this property to have correct payload response examples
        - type: object
          properties:
            eventClassifierCode:
              description: |
                Code for the event classifier can be
                - ACT (Actual)
                - PLN (Planned)
                - EST (Estimated)
                - REQ (Requested)
              enum:
                - ACT
                - PLN
                - EST
                - REQ
              example: ACT
        - type: object
          properties:
            operationsEventTypeCode:
              $ref: '#/components/schemas/operationsEventTypeCode'
        - type: object
          properties:
            publisher:
              allOf:
                - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DOCUMENTATION_DOMAIN/1.0.1#/components/schemas/partyNoID'
        - type: object
          properties:
            publisherRole:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/1.0.1#/components/schemas/partyFunction'
        # Extend the value of partyFunctions for publisherRole
        - type: object
          properties:
            publisherRole:
              description: |
                The party function code of the publisher:
                - CA (Carrier)
                - AG (Carrier local agent)
                - VSL (Experimental: Vessel)
                - ATH (Experimental: Port Authorities)
                - PLT (Experimental: Port Pilot)
                - TR (Terminal)
              enum:
                - CA
                - AG
                - VSL
                - ATH
                - PLT
                - TR
              example: TR
        - type: object
          properties:
            eventLocation:
              allOf:
                - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/1.0.1#/components/schemas/location'
                - description: The location where the event takes place.
              # type: string
              # format: uuid
              # description: |
              #   The location where the event takes place.
        - type: object
          properties:
            portCallServiceTypeCode:
              $ref: '#/components/schemas/portCallServiceTypeCode'
        - type: object
          properties:
            facilityTypeCode:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/1.0.1#/components/schemas/facilityTypeCode'
        # Extend facilityTypeCode to ONLY include PBPL and BRTH
        - type: object
          properties:
            facilityTypeCode:
              type: string
              example: BRTH
              description: |
                The code to identify the specific type of facility.
                - PBPL (Pilot boarding place)
                - BRTH (Berth)
              maxLength: 4
              enum:
                - PBPL
                - BRTH
        - type: object
          properties:
            delayReasonCode:
              $ref: '#/components/schemas/delayReasonCode'
        - type: object
          properties:
            remark:
              $ref: '#/components/schemas/remark'
        - type: object
          properties:
            transportCall:
              $ref: '#/components/schemas/transportCall'
        - type: object
          properties:
            vesselPosition:
              allOf:
                - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/1.0.1#/components/schemas/geoLocation'
                - description: The position of the vessel at the time when the message was sent
              # type: string
              # format: uuid
              # description: |
      required:
        - portCallServiceTypeCode
        - operationsEventTypeCode

    operationsEventBody:
      type: object
      description: |
        The operations event entity is a specialization of the event entity to support specification of data that only applies to an operations event.
        
        <b>NB:</b> This version of the entity is to be used when creating new Operations events - this does not contain an eventID or an eventCreatedDateTime
      allOf:
        - $ref: '#/components/schemas/baseEventBody'
        - $ref: '#/components/schemas/baseOperationsEvent'

    operationsEvent:
      type: object
      allOf:
        - $ref: '#/components/schemas/baseEvent'
        - $ref: '#/components/schemas/baseOperationsEvent'


    ##############################
    # Shipment Subscription object
    ##############################


    shipmentSubscriptionBody:
      type: object
      allOf:
        - type: object
          properties:
            shipmentEventTypeCode:
              $ref: '#/components/schemas/shipmentEventTypeCodes'
        - type: object
          properties:
            carrierBookingReference:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/1.0.1#/components/schemas/carrierBookingReference'
        - type: object
          properties:
            bookingReference:
              type: string
              maxLength: 35
              example: ABC709951
              description: |
                The identifier for a shipment, which is issued by and unique within each of the carriers.
                
                Deprecated - use carrierBookingReference instead
              deprecated: true
        - type: object
          properties:
            transportDocumentID:
              type: string
              format: uuid
              deprecated: true
              description: |
                Uniquely identify a transport document.
                
                Deprecated - use transportDocumentReference instead
        - type: object
          properties:
            transportDocumentReference:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/1.0.1#/components/schemas/transportDocumentReference'
        - type: object
          properties:
            transportDocumentTypeCode:
              $ref: '#/components/schemas/transportDocumentTypeCodes'


    ###############################
    # Equipment Subscription object
    ###############################


    equipmentSubscriptionBody:
      type: object
      allOf:
        - type: object
          properties:
            equipmentEventTypeCode:
              $ref: '#/components/schemas/equipmentEventTypeCodes'
        - type: object
          properties:
            equipmentReference:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/1.0.1#/components/schemas/equipmentReference'


    ###############################
    # Transport Subscription object
    ###############################


    transportSubscriptionBody:
      type: object
      allOf:
        - type: object
          properties:
            transportEventTypeCode:
              $ref: '#/components/schemas/transportEventTypeCodes'
        - type: object
          properties:
            scheduleID:
              allOf:
                - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/1.0.1#/components/schemas/scheduleID'
                - deprecated: true
                - description: 'ID uniquely identifying a schedul.<br>Deprecated as this was added by mistake'
        - type: object
          properties:
            transportCallID:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/1.0.1#/components/schemas/transportCallID'
        - type: object
          properties:
            vesselIMONumber:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/1.0.1#/components/schemas/vesselIMONumber'
        - type: object
          properties:
            carrierVoyageNumber:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/1.0.1#/components/schemas/carrierVoyageNumber'
        - type: object
          properties:
            carrierServiceCode:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/1.0.1#/components/schemas/carrierServiceCode'


    ################################
    # Operations Subscription object
    ################################


    operationsSubscriptionBody:
      type: object
      allOf:
        - type: object
          properties:
            operationsEventTypeCode:
              $ref: '#/components/schemas/operationsEventTypeCodes'

    documentReferences:
      type: array
      description:
        An optional list of key-value (documentReferenceType-documentReferenceValue) pairs representing links to objects relevant to the event. The <b>documentReferenceType</b>-field is used to describe where the <b>documentReferenceValue</b>-field is pointing to.
      example:
        - documentReferenceType: BKG
          documentReferenceValue: ABC123123123
        - documentReferenceType: TRD
          documentReferenceValue: 85943567-eedb-98d3-f4ed-aed697474ed4
      items:
        type: object
        properties:
          documentReferenceType:
            type: string
            description:
              Describes where the documentReferenceValue is pointing to
            example: BKG
            enum:
              - BKG (Booking)
              - TRD (Transport Document)
          documentReferenceValue:
            type: string
            description:
              The value of the identifier the documentReferenceType is describing
            example: 123e4567-e89b-12d3-a456-426614174000

    transportCall:
      type: object
      allOf:
        - type: object
          properties:
            transportCallID:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/1.0.1#/components/schemas/transportCallID'
        - type: object
          properties:
            carrierServiceCode:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/1.0.1#/components/schemas/carrierServiceCode'
        - type: object
          properties:
            carrierVoyageNumber:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/1.0.1#/components/schemas/carrierVoyageNumber'
        # Extending carrierVoyageNumber description!
        - type: object
          properties:
            carrierVoyageNumber:
              description: |
                The vessel operator-specific identifier of the Voyage.
                
                In case there are multiple voyages the export voyage is chosen.
        - type: object
          properties:
            UNLocationCode:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/1.0.1#/components/schemas/UNLocationCode'
        - type: object
          properties:
            facilityCode:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/1.0.1#/components/schemas/facilityCode'
        - type: object
          properties:
            facilityCodeListProvider:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/1.0.1#/components/schemas/facilityCodeListProvider'
        - type: object
          properties:
            facilityTypeCode:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/1.0.1#/components/schemas/facilityTypeCodeTRN'
        - type: object
          properties:
            otherFacility:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/1.0.1#/components/schemas/otherFacility'
        - type: object
          properties:
            modeOfTransport:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/1.0.1#/components/schemas/modeOfTransport'
        - type: object
          properties:
            location:
              allOf:
               -  $ref: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/1.0.1#/components/schemas/location'
               - type: object
                 description: Location of the facility. Can often be omitted
                   when it is just repeating the contents of the UNLocationCode field.
                 example: null
        - type: object
          properties:
            vessel:
              $ref: '#/components/schemas/vessel'
      required:
        - transportCallID
        - modeOfTransport
    vessel:
      description: vessel
      type: object
      allOf:
        - type: object
          properties: 
            vesselIMONumber:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/1.0.1#/components/schemas/vesselIMONumber'
        - type: object
          properties: 
            vesselName:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/1.0.1#/components/schemas/vesselName'
        - type: object
          properties: 
            vesselFlag:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/1.0.1#/components/schemas/vesselFlag'
        - type: object
          properties: 
            vesselCallSignNumber:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/1.0.1#/components/schemas/vesselCallSignNumber'
        - type: object
          properties:
            vesselOperatorCarrierCode:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/1.0.1#/components/schemas/vesselOperatorCarrierCode'
        - type: object
          properties:
            vesselOperatorCarrierCodeListProvider:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/1.0.0#/components/schemas/vesselOperatorCarrierCodeListProvider'
      required:
        - vesselIMONumber
    ##########################
    # Simple types
    ##########################


    callbackUrl:
      type: string
      format: uri
      description: |
        The endPoint where a Carrier whould send back events to the Shipper. The callback can contain query parameters uniquely identifying the originator of the events.
      example: https://myserver.com/send/callback/here?shipperRef=<shipper defined unique id>
    changeRemark:
      description: 'Free text information provided by the vessel operator regarding the reasons for the change in schedule and/or plans to mitigate schedule slippage.'
      type: string
      example: Bad weather
      maxLength: 250
    delayReasonCode:
      description: |
        Reason code for the delay. The SMDG-Delay-Reason-Codes are used for this attribute. The code list can be found at http://www.smdg.org/smdg-code-lists/
      type: string
      maxLength: 3
      example: WEA
    documentID:
      type: string
      description: |
        The id of the object defined by the documentTypeCode.
    documentTypeCode:
      type: string
      maxLength: 3
      description: |
        The code to identify the type of information documentID points to. Can be one of the following values
        - BKG (Booking)
        - SHI (Shipping Instruction)
        - SRM (Shipment Release Message)
        - TRD (Transport Document)
        - ARN (Arrival Notice)
      example: SHI
      enum:
        - BKG
        - SHI
        - SRM
        - TRD
        - ARN
    equipmentEventTypeCode:
      type: string
      description: |
        Unique identifier for equipmentEventTypeCode.
        - LOAD (Loaded)
        - DISC (Discharged)
        - GTIN (Gated in)
        - GTOT (Gated out)
        - STUF (Stuffed)
        - STRP (Stripped)
      enum: 
        - LOAD
        - DISC
        - GTIN
        - GTOT
        - STUF
        - STRP
        # - PICK
        # - DROP
        # - RSEA
        # - RMVD
        # - INSP
      example: LOAD
    equipmentEventTypeCodes:
      type: array
      description: |
        List of equipmentEventTypeCode to filter by. If multiple values are selected - the OR-operator will be used.

        Default is none as it will not filter on equipmentEventTypeCode if not specified.
      example: [GTIN,GTOT]
      items:
        $ref: '#/components/schemas/equipmentEventTypeCode'
    eventClassifierCode:
      type: string
      description: |
        Code for the event classifier. Values can vary depending on eventType
      #   - PLN (Planned)
      #   - ACT (Actual)
      #   - REQ (Requested)
      #   - EST (Estimated)
      # enum:
      #   - PLN
      #   - ACT
      #   - REQ
      #   - EST
      # example: ACT
    eventID:
      type: string
      format: uuid
      description: |
        The unique identifier for the event (the message - not the source).
        
        <b>NB</b>&#58; This field should be considered Metadata
      example: '84db923d-2a19-4eb0-beb5-446c1ec57d34'
    eventCreatedDateTime:
      type: string
      format: date-time
      description: |
        The timestamp of when the event was created.
        
        <b>NB</b>&#58; This field should be considered Metadata
      example: '2021-01-09T14:12:56+01:00'
    eventDateTime:
      type: string
      format: date-time
      example: '2019-11-12T07:41:00+08:30'
      description: The local date and time, where the event took place or when the event will take place, in ISO 8601 format.
    eventType:
      type: string
      description: |
        The Event Type of the object - to be used as a discriminator.

        <b>NB</b>&#58; This field should be considered Metadata
      # enum:
      #   - EQUIPMENT
      #   - SHIPMENT
      #   - TRANSPORT
      #   - OPERATIONS
    eventTypeCode:
      type: string
      example: ARRI
      maxLength: 4
      description: |
        Deprecated - Unique identifier for Event Type Code. This has been replaced by Specialized eventTypeCodes: shipmentEventTypeCode, transportEventTypeCode, equipmentEventTypeCode and opertaionsEventType
      deprecated: true
    operationsEventTypeCode:
      type: string
      description: |
        The code to identify the type of event that is related to the operation
        - STRT (Started)
        - CMPL (Completed)
        - ARRI (Arrived)
        - DEPA (Departed)
      enum:
        - STRT
        - CMPL
        - ARRI
        - DEPA
      example: STRT
    operationsEventTypeCodes:
      type: array
      description: |
        List of operationsEventTypeCode to filter by. If multiple values are selected - the OR-operator will be used.

        Default is none as it will not filter on operationsEventTypeCode if not specified.
      example: [ARRI,CMPL]
      items:
        $ref: '#/components/schemas/operationsEventTypeCode'
    portCallServiceTypeCode:
      type: string
      description: |
        The type of the service provided in the port call
        - PILO (Pilotage)
        - MOOR (Mooring)
        - CRGO (Cargo operations)
        - TOWG (Towage)
        - BUNK (Bunkering)
        - WSDP (Waste disposal)
      enum:
        - PILO
        - MOOR
        - CRGO
        - TOWG
        - BUNK
        - WSDP
      example: BUNK
    reason:
      type: string
      description: 'Reason field in a Shipment event. This field can be used to explain why a specific event has been sent.'
      example: 'The following attributes are missing...'
    remark:
      description: |
        Free text to provide additional information on the context.
      type: string
      example: Port closed due to strike
      maxLength: 500
    secret:
      type: string
      format: byte
      description: |
        A Base64 encoded secret shared between the Publisher and the Subscriber.
        It is used to compute the contents of the Notification-Signature header.
      example: 'MTIzNDU2Nzg5MDEyMzQ1Njc4OTAxMjM0NTY3ODkwMTIzNDM2NTc4NjIzODk3NDY5MDgyNzM0OTg3MTIzNzg2NA=='
    shipmentEventTypeCode:
      type: string
      description: |
        The status of the document in the process. Possible values are
        - RECE (Received)
        - DRFT (Drafted)
        - PENA (Pending Approval)
        - PENU (Pending Update)
        - REJE (Rejected)
        - APPR (Approved)
        - ISSU (Issued)
        - SURR (Surrendered)
        - SUBM (Submitted)
        - VOID (Void)
        - CONF (Confirmed)
      enum:
        - RECE
        - DRFT
        - PENA
        - PENU
        - REJE
        - APPR
        - ISSU
        - SURR
        - SUBM
        - VOID
        - CONF
      example: DRFT
    shipmentEventTypeCodes:
      type: array
      description: |
        List of shipmentEventTypeCode to filter by. If multiple values are selected - the OR-operator will be used.

        Default is none as it will not filter on shipmentEventTypeCode if not specified.
      example: [RECE,DRFT]
      items:
        $ref: '#/components/schemas/shipmentEventTypeCode'
    shipmentInformationType:
      type: string
      maxLength: 3
      deprecated: true
      description: |
        The code to identify the type of information documentID points to. Can be one of the following values
        - BOK (Booking - deprecated use BKG instead)
        - BKG (Booking)
        - SHI (Shipping Instruction)
        - VGM (Verified Gross Mass)
        - SRM (Shipment Release Message)
        - TRD (Transport Document)
        - ARN (Arrival Notice)
        
        <b>Deprecated</b> - use documentTypeCode instead
      example: SHI
      enum:
        - BOK
        - BKG
        - SHI
        - VGM
        - SRM
        - TRD
        - ARN
    subscriptionID:
      type: string
      format: uuid
      example: 123e4567-e89b-12d3-a456-426614174000
      description: 'The carrier issues a unique ID to the shipper or consignee for that subscription'
    transportDocumentTypeCodes:
      type: array
      description: |
        List of transportDocumentType to filter by. If multiple values are selected - the OR-operator will be used.
        
        Default is none as it will not filter on transportDocumentType if not specified.
      example: [BOL]
      items:
        $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/1.0.1#/components/schemas/transportDocumentType'
    transportEventTypeCode:
      type: string
      description: |
        Identifier for type of Transport event
        - ARRI (Arrived)
        - DEPA (Departed)
      enum:
        - ARRI
        - DEPA
        # - OMIT
      example: ARRI
    transportEventTypeCodes:
      type: array
      description: |
        List of transportEventTypeCode to filter by. If multiple values are selected - the OR-operator will be used.

        Default is none as it will not filter on transportEventTypeCode if not specified.
      example: [ARRI,DEPA]
      items:
        $ref: '#/components/schemas/transportEventTypeCode'
    vesselScheduleChangeRemark:
      description: |
        Free text information provided by the vessel operator regarding the reasons for the change in schedule and/or plans to mitigate schedule slippage.
        
        Deprecated - use changeRemark instead
      type: string
      example: Bad weather
      maxLength: 250
      deprecated: true