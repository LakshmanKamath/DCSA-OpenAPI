openapi: 3.0.3
info:
  version: 3.0.0-Beta-1
  title: 'DCSA OpenAPI specification for Track & Trace'
  description: |
    Managing and sending `ShipmentEvents`, `TransportEvents` and `EquipmentEvents` and subscriptions for **Track &amp; Trace** (T&amp;T). API specification issued by DCSA.org.
    
    For explanation to specific values or objects please refer to the [Information Model 2022.{to be updated}](https://dcsa.my.salesforce.com/sfc/p/#2o000000YvHJ/a/7T0000005DYt/jyzttKZQS1vxdd6dAFkWYi4F5RMiz38EsGwCBGhp1ic)
    
    Polling can be done on the
    
        GET /v3/events
    
    endPoint. It is also possible to setup a subscription on the
    
        /v3/event-subscriptions

    endPoints in order to use the push model. Here events are pushed as they occur.

    For a changelog please click [here](https://github.com/dcsaorg/DCSA-OpenAPI/blob/master/tnt/v3#v300). Please also [create a GitHub issue](https://github.com/dcsaorg/DCSA-OpenAPI/issues/new) if you have any questions/comments.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  contact:
    name: Digital Container Shipping Association (DCSA)
    url: https://dcsa.org
    email: info@dcsa.org
tags:
  - name: Events
    description: Event operations
  - name: Subscriptions
    description: Subscription operations
  - name: Secret
    description: Update secret
paths:
  /v3/events:
    get:
      tags:
        - Events
      summary: Find events.
      description: |
        Returns all events filtered by the queryParameters.
        
        **NB**: It is possible to combine queryParameters. When combining queryParameters be aware that it is also possible to make combinations that are mutual contradicting. Example:
        
            shipmentEventTypeCode=DRFT & equipmentEventTypeCode=GTIN
        
        Since there is no event that can be a ShipmentEvent **and** an EquipmentEvent at the same time **this will return an empty list**!
      parameters:
        # OBS: Be aware that changing the parameters requires a manual change in other APIs

        # Chunk with Metadata Event related parameters

        - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/EVENT_DOMAIN/3.0.0#/components/parameters/eventCreatedDateTime'
        - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/EVENT_DOMAIN/3.0.0#/components/parameters/eventDateTime'
        # The eventType parameter is needed when more than one Event type can be returned
        - name: eventType
          in: query
          description: |
            The type of event(s) to filter by. Possible values are
            
            - SHIPMENT (Shipment events)
            - TRANSPORT (Transport events)
            - EQUIPMENT (Equipment events)
            
            It is possible to select multiple values by comma `,` separating them. For multiple values the **OR**-operator is used. For example
            
                eventType=SHIPMENT,EQUIPMENT
            
            matches **both** `ShipmentEvents` and `EquipmentEvents`.
            
            Default value is all `eventTypes`.
          required: false
          style: form
          explode: false
          schema:
            default: SHIPMENT,TRANSPORT,EQUIPMENT
            type: array
            items:
              type: string
              enum:
                - SHIPMENT
                - TRANSPORT
                - EQUIPMENT

        # Chunk with Shipment related event parameters
        - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/EVENT_DOMAIN/3.0.0#/components/parameters/shipmentEventTypeCode'
        - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/EVENT_DOMAIN/3.0.0#/components/parameters/documentTypeCode'
        - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/EVENT_DOMAIN/3.0.0#/components/parameters/documentReference'
        # - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/EVENT_DOMAIN/3.0.0#/components/parameters/equipmentReference'
        # - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/EVENT_DOMAIN/3.0.0#/components/parameters/carrierBookingReference'
        # - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/EVENT_DOMAIN/3.0.0#/components/parameters/transportDocumentReference'

        # Chunk with Transport related event parameters
        - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/EVENT_DOMAIN/3.0.0#/components/parameters/transportEventTypeCode'

        # Chunk with Equipment related event parameters
        - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/EVENT_DOMAIN/3.0.0#/components/parameters/equipmentEventTypeCode'
        - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/EVENT_DOMAIN/3.0.0#/components/parameters/equipmentReference'

        # Chunk with TransportCall related event parameters (used both in Equipment- and Transport-Events)
        - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/EVENT_DOMAIN/3.0.0#/components/parameters/transportCallReference'
        - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/EVENT_DOMAIN/3.0.0#/components/parameters/vesselIMONumber'
        - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/EVENT_DOMAIN/3.0.0#/components/parameters/carrierExportVoyageNumber'
        - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/EVENT_DOMAIN/3.0.0#/components/parameters/universalExportVoyageReference'
        - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/EVENT_DOMAIN/3.0.0#/components/parameters/carrierServiceCode'
        - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/EVENT_DOMAIN/3.0.0#/components/parameters/universalServiceReference'
        - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/EVENT_DOMAIN/3.0.0#/components/parameters/UNLocationCode'


        # Chunk with event parameters needed to be included in all APIs
        - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.3#/components/parameters/limit'
        - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.3#/components/parameters/cursor'
        - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.3#/components/parameters/sort'
        - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.3#/components/parameters/Api-Version-Major'
      responses:
        '200':
          description: Successful operation
          headers:
            API-Version:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.3#/components/headers/API-Version'
            Current-Page:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.3#/components/headers/Current-Page'
            Next-Page:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.3#/components/headers/Next-Page'
            Prev-Page:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.3#/components/headers/Prev-Page'
            Last-Page:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.3#/components/headers/Last-Page'
            First-Page:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.3#/components/headers/First-Page'
          content:
            application/json:
              schema:
                type: array
                items:
                  oneOf:
                    - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/EVENT_DOMAIN/3.0.0#/components/schemas/shipmentEvent'
                    - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/EVENT_DOMAIN/3.0.0#/components/schemas/equipmentEvent'
                    - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/EVENT_DOMAIN/3.0.0#/components/schemas/transportEvent'
        default:
          description: Unexpected error
          headers:
            API-Version:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.3#/components/headers/API-Version'
          content:
            application/json:
              schema:
                allOf:
                  - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/ERROR_DOMAIN/1.1.0#/components/schemas/error'
                  - type: object
                    properties:
                      httpMethod:
                        example: GET
                  - type: object
                    properties:
                      requestUri:
                        example: 'https://dcsa.org/dcsa/tnt/v3/events'
  /v3/events/{eventID}:
    get:
      tags:
        - Events
      summary: Find event by eventID.
      description: Returns the event with the specified `eventID`.
      parameters:
        - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/EVENT_DOMAIN/3.0.0#/components/parameters/eventID'
      responses:
        '200':
          description: Successful operation
          headers:
            API-Version:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.3#/components/headers/API-Version'
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/EVENT_DOMAIN/3.0.0#/components/schemas/shipmentEvent'
                  - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/EVENT_DOMAIN/3.0.0#/components/schemas/equipmentEvent'
                  - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/EVENT_DOMAIN/3.0.0#/components/schemas/transportEvent'
                discriminator:
                  propertyName: eventType
              examples:
                Shipment Event:
                  value:
                    metadata:
                      eventID: '84db923d-2a19-4eb0-beb5-446c1ec57d34'
                      eventCreatedDateTime: '2022-09-19T06:31:00+02:00'
                      eventType: 'SHIPMENT'
                    payload:
                      eventClassifierCode: 'ACT'
                      eventDateTime: '2022-09-19T06:31:00+02:00'
                      shipmentEventTypeCode: 'ISSU'
                      documentTypeCode: 'TRD'
                      documentReference: '84db923d-2a19-4eb0-beb5-446c1ec57d34'
                      reason: 'All good'
                      relatedDocumentReferences:
                        - relatedDocumentReferenceType: 'BKG'
                          relatedDocumentReferenceValue: 'ABC123059'
                      references:
                        - referenceType: 'EQ'
                          referenceValue: 'APZU4812090'
                Retracted Transport Event:
                  value:
                    metadata:
                      eventID: '2239d040-78c9-4172-8863-89428af41a0e'
                      eventCreatedDateTime: '2022-09-20T07:41:00+08:30'
                      eventType: 'TRANSPORT'
                      retractedEventID: '957e4966-dad0-4111-9f8f-fb7216c43907'
        default:
          description: Unexpected error
          headers:
            API-Version:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.3#/components/headers/API-Version'
          content:
            application/json:
              schema:
                allOf:
                  - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/ERROR_DOMAIN/1.1.0#/components/schemas/error'
                  - type: object
                    properties:
                      httpMethod:
                        example: GET
                  - type: object
                    properties:
                      requestUri:
                        example: 'https://dcsa.org/dcsa/tnt/v3/events/123e4567-e89b-12d3-a456-426614174000'

  /v3/event-subscriptions:
    get:
      tags:
      - Subscriptions
      summary: Receive a list of your active subscriptions
      parameters:
        - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.3#/components/parameters/limit'
        - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.3#/components/parameters/cursor'
        - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.3#/components/parameters/sort'
        - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.3#/components/parameters/Api-Version-Major'
      responses:
        '200':
          description: Returns a list of subscriptions
          headers:
            API-Version:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.3#/components/headers/API-Version'
            Current-Page:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.3#/components/headers/Current-Page'
            Next-Page:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.3#/components/headers/Next-Page'
            Prev-Page:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.3#/components/headers/Prev-Page'
            Last-Page:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.3#/components/headers/Last-Page'
            First-Page:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.3#/components/headers/First-Page'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/subscription'
        default:
          description: Unexpected error
          headers:
            API-Version:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.3#/components/headers/API-Version'
          content:
            application/json:
              schema:
                allOf:
                  - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/ERROR_DOMAIN/1.1.0#/components/schemas/error'
                  - type: object
                    properties:
                      httpMethod:
                        example: GET
                  - type: object
                    properties:
                      requestUri:
                        example: 'https://dcsa.org/dcsa/tnt/v3/event-subscriptions'
    post:
      tags:
      - Subscriptions
      summary: Create a subscription
      parameters:
        - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.3#/components/parameters/Api-Version-Major'
      requestBody:
        description: |
          Parameters used to configure the subscription. It is possible to only receive cirtain types of events by adding filter values to the subscription.
          
          All values in the subscription body except: `callback`, `secret` and `subscriptionID` will be used as filters. All filters specified **must** be fulfilled in order to match an Event.
          
          A logical **AND** is used between filters. So
          
              shipmentEventTypeCode=DRFT&carrierBookingReference=ABC123123
          
          means that the events matched ***must*** both be in draft status (`shipmentEventTypeCode=DRFT`) **and** be connected to carrierBookingReference ABC123123 (`carrierBookingReference=ABC123123`)
          
          Filters that are specified as `,` (comma) separated lists use logical **OR** between list values. So
          
              eventType=SHIPMENT,TRANSPORT
          
          means that **both** `ShipmentEvents` **and** `TransportEvents` will be matched by this subscription.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/subscriptionBodyWithSecret'
      responses:
        '201':
          description: Subscription created
          headers:
            API-Version:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.3#/components/headers/API-Version'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/subscription'
        default:
          description: Unexpected error
          headers:
            API-Version:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.3#/components/headers/API-Version'
          content:
            application/json:
              schema:
                allOf:
                  - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/ERROR_DOMAIN/1.1.0#/components/schemas/error'
                  - type: object
                    properties:
                      httpMethod:
                        example: POST
                  - type: object
                    properties:
                      requestUri:
                        example: 'https://dcsa.org/dcsa/tnt/v3/event-subscriptions'
      callbacks:
        event:
          '{$request.body.callbackUrl}':
            post:   # Method
              parameters:
                - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/EVENT_DOMAIN/3.0.0#/components/parameters/signatureHeader'
                - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/EVENT_DOMAIN/3.0.0#/components/parameters/subscriptionIDHeader'
                - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/EVENT_DOMAIN/3.0.0#/components/parameters/notificationSignature'
                - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/EVENT_DOMAIN/3.0.0#/components/parameters/apiVersion'
              description: |
                Whenever an event occurs that matches a subscription a `POST` call will be made to the `callbackUrl`. The request will be a list of events and contain the `subscriptionID` in the header originating the request.
                
                It is up to the receiver of the request to validate the content and make sure it is not sent from a malicious sender. This process is documented in the [DCSA Subscription Callback API 1.0](file:///C:/Users/Henrik/Downloads/202109_DCSA-Subscription-Callback-API_1.0_Final.pdf).
                
                When the `POST` request is accepted by the receiver a `204` (No Content) **MUST** be returned.
              requestBody: # Contents of the callback message
                required: true
                content:
                  application/json:
                    schema:
                      type: array
                      items:
                        oneOf:
                          - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/EVENT_DOMAIN/3.0.0#/components/schemas/shipmentEvent'
                          - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/EVENT_DOMAIN/3.0.0#/components/schemas/equipmentEvent'
                          - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/EVENT_DOMAIN/3.0.0#/components/schemas/transportEvent'
              responses:   # Expected responses to the callback message
                '204':
                  description: 'Your server returns this code if it accepts the callback'
  /v3/event-subscriptions/{subscriptionID}:
    get:
      tags:
      - Subscriptions
      summary: Find a subscription by subscription ID
      parameters:
        - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/EVENT_DOMAIN/3.0.0#/components/parameters/subscriptionID'
        - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.3#/components/parameters/Api-Version-Major'
      responses:
        '200':
          description: Subscription returned
          headers:
            API-Version:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.3#/components/headers/API-Version'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/subscription'
        default:
          description: Unexpected error
          headers:
            API-Version:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.3#/components/headers/API-Version'
          content:
            application/json:
              schema:
                allOf:
                  - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/ERROR_DOMAIN/1.1.0#/components/schemas/error'
                  - type: object
                    properties:
                      httpMethod:
                        example: GET
                  - type: object
                    properties:
                      requestUri:
                        example: 'https://dcsa.org/dcsa/tnt/v3/event-subscriptions/8fbdc2d8-57c8-48b9-a04b-18fd8ec1d809'
    delete:
      tags:
      - Subscriptions
      summary: Stop a subscription, using the subscription ID
      parameters:
        - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/EVENT_DOMAIN/3.0.0#/components/parameters/subscriptionID'
        - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.3#/components/parameters/Api-Version-Major'
      responses:
        '204':
          description: Subscription stopped
          headers:
            API-Version:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.3#/components/headers/API-Version'
        default:
          description: Unexpected error
          headers:
            API-Version:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.3#/components/headers/API-Version'
          content:
            application/json:
              schema:
                allOf:
                  - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/ERROR_DOMAIN/1.1.0#/components/schemas/error'
                  - type: object
                    properties:
                      httpMethod:
                        example: DELETE
                  - type: object
                    properties:
                      requestUri:
                        example: 'https://dcsa.org/dcsa/tnt/v3/event-subscriptions/8fbdc2d8-57c8-48b9-a04b-18fd8ec1d809'
    put:
      tags:
      - Subscriptions
      summary: Alter a subscription using the `subscriptionID`
      parameters:
        - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/EVENT_DOMAIN/3.0.0#/components/parameters/subscriptionID'
        - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.3#/components/parameters/Api-Version-Major'
      requestBody:
        description: Parameters used to configure the subscription
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/subscription'
      responses:
        '200':
          description: Subscription updated
          headers:
            API-Version:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.3#/components/headers/API-Version'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/subscription'
        default:
          description: Unexpected error
          headers:
            API-Version:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.3#/components/headers/API-Version'
          content:
            application/json:
              schema:
                allOf:
                  - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/ERROR_DOMAIN/1.1.0#/components/schemas/error'
                  - type: object
                    properties:
                      httpMethod:
                        example: PUT
                  - type: object
                    properties:
                      requestUri:
                        example: 'https://dcsa.org/dcsa/tnt/v3/event-subscriptions/8fbdc2d8-57c8-48b9-a04b-18fd8ec1d809'
  /v3/event-subscriptions/{subscriptionID}/secret:
    put:
      tags:
      - Secret
      summary: Resets the Secret on an existing subscription identified by subscription ID.
      parameters:
        - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/EVENT_DOMAIN/3.0.0#/components/parameters/subscriptionID'
        - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.3#/components/parameters/Api-Version-Major'
      requestBody:
        description: Parameters used to configure the subscription
        required: true
        content:
          application/json:
            schema:
              allOf:
                - type: object
                  properties:
                    secret:
                      $ref: 'https://api.swaggerhub.com/domains/dcsaorg/EVENT_DOMAIN/3.0.0#/components/schemas/secret'
      responses:
        '204':
          description: Secret updated
          headers:
            API-Version:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.3#/components/headers/API-Version'
        default:
          description: Unexpected error
          headers:
            API-Version:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.3#/components/headers/API-Version'
          content:
            application/json:
              schema:
                allOf:
                  - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/ERROR_DOMAIN/1.1.0#/components/schemas/error'
                  - type: object
                    properties:
                      httpMethod:
                        example: PUT
                  - type: object
                    properties:
                      requestUri:
                        example: 'https://dcsa.org/dcsa/tnt/v3/event-subscriptions/8fbdc2d8-57c8-48b9-a04b-18fd8ec1d809/secret'

components:

  ##############################
  # All events and subscriptions
  ##############################

  schemas:
    eventTypes:
      type: array
      description: |
        List of `eventType` to filter by. If multiple values are selected - the **OR**-operator will be used.
        
        Possible values are
        - SHIPMENT (Shipment events)
        - TRANSPORT (Transport events)
        - EQUIPMENT (Equipment events)
        
        Default is none as it will not filter on `eventType` if not specified.
      example: [TRANSPORT,EQUIPMENT]
      items:
        type: string
        enum:
        - SHIPMENT
        - TRANSPORT
        - EQUIPMENT
    subscriptionBody:
      type: object
      allOf:
        - type: object
          properties:
            callbackUrl:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/EVENT_DOMAIN/3.0.0#/components/schemas/callbackUrl'
        - type: object
          properties:
            eventType:
              allOf:
                - $ref: '#/components/schemas/eventTypes'
        - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/EVENT_DOMAIN/3.0.0#/components/schemas/shipmentSubscriptionBody'
        - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/EVENT_DOMAIN/3.0.0#/components/schemas/transportSubscriptionBody'
        - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/EVENT_DOMAIN/3.0.0#/components/schemas/equipmentSubscriptionBody'
      required:
        - callbackUrl
        
    subscriptionBodyWithSecret:
      type: object
      allOf:
        - $ref: '#/components/schemas/subscriptionBody'
        - type: object
          properties:
            secret:
              allOf:
                - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/EVENT_DOMAIN/3.0.0#/components/schemas/secret'
                - description: |
                    A shared secret shared between the Publisher and the Subscriber. It is used to compute the contents of the `Notification-Signature` header.
                    
                    _**Only** valid in `POST` calls - anywhere else must be omitted!_
      required:
        - secret

    subscription:
      type: object
      allOf:
        - type: object
          properties:
            subscriptionID:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/EVENT_DOMAIN/3.0.0#/components/schemas/subscriptionID'
        - $ref: '#/components/schemas/subscriptionBody'
# servers:
#   - description: SwaggerHub API Auto Mocking
#     url: https://virtserver.swaggerhub.com/dcsaorg/DCSA_TNT/2.1.1
