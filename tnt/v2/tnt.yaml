openapi: 3.0.3
info:
  version: 2.1.0
  title: 'DCSA OpenAPI specification for Track & Trace'
  description: |
    Managing and sending Shipment-, Transport- and Equipment-events and subscriptions for Track &amp; Trace (T&amp;T). API specification issued by DCSA.org.
    
    For explanation to specific values or objects please refer to the <a href='https://dcsa.org/wp-content/uploads/2021/07/202108_DCSA_P1_Information-Model-v3.2_Final.pdf'>Information Model v3.2</a>

    Polling can be done on the <b>GET /v2/events</b> endPoint. It is also possible to setup a subscription on the <b>/v2/event-subscriptions</b> endPoints in order to use the push model. Here events are pushed as they occur.
#    This API is a subset of <a href='https://app.swaggerhub.com/apis/dcsaorg/EVENT_HUB'>DCSA Event Hub</a> which can send and manage all DCSA defined Events.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  contact:
    name: Digital Container Shipping Association (DCSA)
    url: https://dcsa.org
    email: info@dcsa.org
tags:
  - name: Events
    description: Event operations
  - name: Subscriptions
    description: Subscription operations
  # - name: Secret
  #   description: Reset secret
paths:
  /events:
    get:
      tags:
        - Events
      summary: Find events.
      description: |
        Returns all events filtered by the queryParameters.
        
        <b>NB</b>&#58; It is possible to combine queryParameters. When combining queryParameters be aware that it is also possible to make combinations that are mutual contradicting.
        
        Example&#58; <i>shipmentEventTypeCode=DRFT and equipmentEventTypeCode=GTIN</i>
        
        Since there is no event that can be a ShipmentEvent <u>and</u> an EquipmentEvent at the same time <b>this will return an empty list<b>!
      parameters:
        # OBS: Be aware that changing the parameters requires a manual change in other APIs

        # The eventType parameter is needed when more than one Event type can be returned
        - in: query
          name: eventType
          description: |
            The type of event(s) to filter by. Possible values are
            
            - SHIPMENT (Shipment events)
            - TRANSPORT (Transport events)
            - EQUIPMENT (Equipment events)
            
            It is possible to select multiple values by comma (,) separating them. For multiple values the OR-operator is used. For example eventType=SHIPMENT,EQUIPMENT matches both Shipment- and Equipment-events.
            
            Default value is all event types.
          required: false
          explode: false
          style: form
          example: SHIPMENT,EQUIPMENT
          schema:
            default: SHIPMENT,TRANSPORT,EQUIPMENT
            type: array
            items:
              type: string
              enum:
                - SHIPMENT
                - TRANSPORT
                - EQUIPMENT

        # Chunk with Shipment related event parameters
        - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/EVENT_DOMAIN/1.0.1#/components/parameters/shipmentEventTypeCode'
        - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/EVENT_DOMAIN/1.0.1#/components/parameters/carrierBookingReference'
        - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/EVENT_DOMAIN/1.0.1#/components/parameters/bookingReference'
        - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/EVENT_DOMAIN/1.0.1#/components/parameters/transportDocumentID'
        - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/EVENT_DOMAIN/1.0.1#/components/parameters/transportDocumentReference'
        - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/EVENT_DOMAIN/1.0.1#/components/parameters/transportDocumentTypeCode'

        # Chunk with Transport related event parameters
        - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/EVENT_DOMAIN/1.0.1#/components/parameters/transportEventTypeCode'
        - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/EVENT_DOMAIN/1.0.1#/components/parameters/scheduleID'
        - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/EVENT_DOMAIN/1.0.1#/components/parameters/transportCallID'
        - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/EVENT_DOMAIN/1.0.1#/components/parameters/vesselIMONumber'
        - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/EVENT_DOMAIN/1.0.1#/components/parameters/carrierVoyageNumber'
        - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/EVENT_DOMAIN/1.0.1#/components/parameters/carrierServiceCode'

        # Chunk with Equipment related event parameters
        - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/EVENT_DOMAIN/1.0.1#/components/parameters/equipmentEventTypeCode'
        - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/EVENT_DOMAIN/1.0.1#/components/parameters/equipmentReference'

        # Chunk with base event parameters
        - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/EVENT_DOMAIN/1.0.1#/components/parameters/eventCreatedDateTime'

        # Chunk with event parameters needed to be included in all APIs
        - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/1.0.1#/components/parameters/limit'
        - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/1.0.1#/components/parameters/cursor'
        - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/1.0.1#/components/parameters/Api-Version-Major'
      responses:
        '200':
          description: Successful operation
          headers:
            API-Version:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/1.0.1#/components/headers/API-Version'
            Current-Page:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/1.0.1#/components/headers/Current-Page'
            Next-Page:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/1.0.1#/components/headers/Next-Page'
            Prev-Page:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/1.0.1#/components/headers/Prev-Page'
            Last-Page:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/1.0.1#/components/headers/Last-Page'
            First-Page:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/1.0.1#/components/headers/First-Page'
          content:
            application/json:
              schema:
                type: array
                items:
                  anyOf:
                    - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/EVENT_DOMAIN/1.0.1#/components/schemas/transportEvent'
                    - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/EVENT_DOMAIN/1.0.1#/components/schemas/shipmentEvent'
                    - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/EVENT_DOMAIN/1.0.1#/components/schemas/equipmentEvent'
        default:
          description: Unexpected error
          headers:
            API-Version:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/1.0.1#/components/headers/API-Version'
          content:
            application/json:
              schema:
                $ref: 'https://api.swaggerhub.com/domains/dcsaorg/ERROR_DOMAIN/1.0.0#/components/schemas/error'
  /events/{eventID}:
    get:
      tags:
        - Events
      summary: Find events by eventID.
      description: Returns event with the specified eventID.
      deprecated: true
      parameters:
        - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/EVENT_DOMAIN/1.0.1#/components/parameters/eventID'
      responses:
        '200':
          description: Successful operation
          headers:
            API-Version:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/1.0.1#/components/headers/API-Version'
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/EVENT_DOMAIN/1.0.1#/components/schemas/shipmentEvent'
                  - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/EVENT_DOMAIN/1.0.1#/components/schemas/transportEvent'
                  - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/EVENT_DOMAIN/1.0.1#/components/schemas/equipmentEvent'
                discriminator:
                  propertyName: eventType
                example: #Couldn't use $ref in this example. Should be updated manually if shipmentEvent changes
                  eventID: '84db923d-2a19-4eb0-beb5-446c1ec57d34'
                  eventType: 'SHIPMENT'
                  eventCreatedDateTime: '2019-11-12T07:41:00+08:30'
                  eventSubtype: 'ISSU'
                  documentID: '84db923d-2a19-4eb0-beb5-446c1ec57d34'
                  documentTypeCode: "TRD"
                  reason: 'All good'
        default:
          description: Unexpected error
          headers:
            API-Version:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/1.0.1#/components/headers/API-Version'
          content:
            application/json:
              schema:
                $ref: 'https://api.swaggerhub.com/domains/dcsaorg/ERROR_DOMAIN/1.0.0#/components/schemas/error'

  /event-subscriptions:
    get:
      tags:
      - Subscriptions
      summary: Receive a list of your active subscriptions
      parameters:
        - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/1.0.1#/components/parameters/limit'
        - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/1.0.1#/components/parameters/cursor'
        - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/1.0.1#/components/parameters/Api-Version-Major'
      responses:
        '200':
          description: Returns a list of subscriptions
          headers:
            API-Version:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/1.0.1#/components/headers/API-Version'
            Current-Page:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/1.0.1#/components/headers/Current-Page'
            Next-Page:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/1.0.1#/components/headers/Next-Page'
            Prev-Page:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/1.0.1#/components/headers/Prev-Page'
            Last-Page:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/1.0.1#/components/headers/Last-Page'
            First-Page:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/1.0.1#/components/headers/First-Page'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/subscription'
        default:
          description: Unexpected error
          headers:
            API-Version:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/1.0.1#/components/headers/API-Version'
          content:
            application/json:
              schema:
                $ref: 'https://api.swaggerhub.com/domains/dcsaorg/ERROR_DOMAIN/1.0.0#/components/schemas/error'
    post:
      tags:
      - Subscriptions
      summary: Create a subscription
      parameters:
        - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/1.0.1#/components/parameters/Api-Version-Major'
      requestBody:
        description: |
          Parameters used to configure the subscription. It is possible to only receive cirtain types of events by adding filter values to the subscription.
          
          All values in the subscription body except&#58; <i>callback, secret and subscriptionID</i> will be used as filters. All filters specified must be filfilled in order to match an Event. A logical <b>AND</b> is used between filters. So
          
          <i>shipmentEventTypeCode=DRFT<b>&</b>carrierBookingReference=ABC123123</i>
          
          means that the events matched must both be Draft (shipmentEventTypeCode=DRFT) <b>and</b> be connected to carrierBookingReference ABC123123 (carrierBookingReference=ABC123123)
          
          Filters that are specified as (comma separated) lists use logical <b>OR</b> between list values. So
          
          <i>eventType=SHIPMENT,TRANSPORT</i>
          
          means that <b>both</b> Shipment- <b>and</b> Transport-events will be matched by this subscription.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/subscriptionBodyWithSecret'
      responses:
        '201':
          description: Subscription created
          headers:
            API-Version:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/1.0.1#/components/headers/API-Version'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/subscription'
        default:
          description: Unexpected error
          headers:
            API-Version:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/1.0.1#/components/headers/API-Version'
          content:
            application/json:
              schema:
                $ref: 'https://api.swaggerhub.com/domains/dcsaorg/ERROR_DOMAIN/1.0.0#/components/schemas/error'
      callbacks:
        event:
          '{$request.body.callbackUrl}':
            post:   # Method
              parameters:
                - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/EVENT_DOMAIN/1.0.1#/components/parameters/signatureHeader'
                - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/EVENT_DOMAIN/1.0.1#/components/parameters/subscriptionIDHeader'
                - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/EVENT_DOMAIN/1.0.1#/components/parameters/notificationSignature'
                - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/EVENT_DOMAIN/1.0.1#/components/parameters/apiVersion'
              requestBody: # Contents of the callback message
                required: true
                content:
                  application/json:
                    schema:
                      type: array
                      items:
                        anyOf:
                          - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/EVENT_DOMAIN/1.0.1#/components/schemas/transportEvent'
                          - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/EVENT_DOMAIN/1.0.1#/components/schemas/shipmentEvent'
                          - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/EVENT_DOMAIN/1.0.1#/components/schemas/equipmentEvent'
              responses:   # Expected responses to the callback message
                '204':
                  description: 'Your server returns this code if it accepts the callback'
  /event-subscriptions/{subscriptionID}:
    get:
      tags:
      - Subscriptions
      summary: Find a subscription by subscription ID
      parameters:
        - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/EVENT_DOMAIN/1.0.1#/components/parameters/subscriptionID'
        - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/1.0.1#/components/parameters/Api-Version-Major'
      responses:
        '200':
          description: Subscription returned
          headers:
            API-Version:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/1.0.1#/components/headers/API-Version'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/subscription'
        default:
          description: Unexpected error
          headers:
            API-Version:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/1.0.1#/components/headers/API-Version'
          content:
            application/json:
              schema:
                $ref: 'https://api.swaggerhub.com/domains/dcsaorg/ERROR_DOMAIN/1.0.0#/components/schemas/error'
    delete:
      tags:
      - Subscriptions
      summary: Stop a subscription, using the subscription ID
      parameters:
        - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/EVENT_DOMAIN/1.0.1#/components/parameters/subscriptionID'
        - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/1.0.1#/components/parameters/Api-Version-Major'
      responses:
        '204':
          description: Subscription stopped
          headers:
            API-Version:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/1.0.1#/components/headers/API-Version'
        default:
          description: Unexpected error
          headers:
            API-Version:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/1.0.1#/components/headers/API-Version'
          content:
            application/json:
              schema:
                $ref: 'https://api.swaggerhub.com/domains/dcsaorg/ERROR_DOMAIN/1.0.0#/components/schemas/error'
    put:
      tags:
      - Subscriptions
      summary: Alter a subscription
      parameters:
        - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/EVENT_DOMAIN/1.0.1#/components/parameters/subscriptionID'
        - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/1.0.1#/components/parameters/Api-Version-Major'
      requestBody:
        description: Parameters used to configure the subscription
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/subscription'
      responses:
        '200':
          description: Subscription updated
          headers:
            API-Version:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/1.0.1#/components/headers/API-Version'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/subscription'
        default:
          description: Unexpected error
          headers:
            API-Version:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/1.0.1#/components/headers/API-Version'
          content:
            application/json:
              schema:
                $ref: 'https://api.swaggerhub.com/domains/dcsaorg/ERROR_DOMAIN/1.0.0#/components/schemas/error'
  # Update Secret is out of 2.1 -> will be added in v2.2
  # /event-subscriptions/{subscriptionID}/secret:
  #   put:
  #     tags:
  #     - Secret
  #     summary: Resets the Secret on an existing subscription.
  #     parameters:
  #       - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/EVENT_DOMAIN/1.0.1#/components/parameters/subscriptionID'
  #       - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/1.0.1#/components/parameters/Api-Version-Major'
  #     requestBody:
  #       description: Parameters used to configure the subscription
  #       required: true
  #       content:
  #         application/json:
  #           schema:
  #             allOf:
  #               - type: object
  #                 properties:
  #                   secret:
  #                     $ref: 'https://api.swaggerhub.com/domains/dcsaorg/EVENT_DOMAIN/1.0.1#/components/schemas/secret'
  #     responses:
  #       '204':
  #         description: Secret updated
  #         headers:
  #           API-Version:
  #             $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/1.0.1#/components/headers/API-Version'
  #       default:
  #         description: Unexpected error
  #         headers:
  #           API-Version:
  #             $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/1.0.1#/components/headers/API-Version'
  #         content:
  #           application/json:
  #             schema:
  #               $ref: 'https://api.swaggerhub.com/domains/dcsaorg/ERROR_DOMAIN/1.0.0#/components/schemas/error'

components:

  ##############################
  # All events and subscriptions
  ##############################

  schemas:

    events:
      type: array
      items:
        anyOf:
          - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/EVENT_DOMAIN/1.0.1#/components/schemas/shipmentEvent'
          - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/EVENT_DOMAIN/1.0.1#/components/schemas/transportEvent'
          - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/EVENT_DOMAIN/1.0.1#/components/schemas/equipmentEvent'

    eventTypes:
      type: array
      description: |
        A comma separated list of event types to filter on.
        
        Default is all events.
      example: [EQUIPMENT,TRANSPORT]
      default: [EQUIPMENT,SHIPMENT,TRANSPORT]
      items:
        type: string
        enum:
        - EQUIPMENT
        - SHIPMENT
        - TRANSPORT
    subscriptionBody:
      type: object
      allOf:
        - type: object
          properties:
            callbackUrl:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/EVENT_DOMAIN/1.0.1#/components/schemas/callbackUrl'
        - type: object
          properties:
            eventType:
              $ref: '#/components/schemas/eventTypes'
        - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/EVENT_DOMAIN/1.0.1#/components/schemas/shipmentSubscriptionBody'
        - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/EVENT_DOMAIN/1.0.1#/components/schemas/transportSubscriptionBody'
        - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/EVENT_DOMAIN/1.0.1#/components/schemas/equipmentSubscriptionBody'
      required:
        - callbackUrl
        
    subscriptionBodyWithSecret:
      type: object
      allOf:
        - $ref: '#/components/schemas/subscriptionBody'
        - type: object
          properties:
            secret:
              allOf:
                - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/EVENT_DOMAIN/1.0.1#/components/schemas/secret'
                - description: A shared secret shared between the Publisher and the Subscriber. It is used to compute the contents of the Notification-Signature header. <b>Only</b> valid in POST calls - anywhere else must be omitted!
      required:
        - secret

    subscription:
      type: object
      allOf:
        - type: object
          properties:
            subscriptionID:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/EVENT_DOMAIN/1.0.1#/components/schemas/subscriptionID'
        - $ref: '#/components/schemas/subscriptionBody'
servers:
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/dcsaorg/DCSA_OAS/1.2.1