openapi: 3.0.3
info:
  version: 1.0.0
  title: DCSA Event Hub
  description: |
    Managing and sending all DCSA defined events and subscriptions.
    
    This API implements the following Event types:
    - Shipment Events (used by <a href='https://app.swaggerhub.com/apis/dcsaorg/DCSA_EBL'>Electronic Bill of Lading (EBL)</a> and <a href='https://app.swaggerhub.com/apis/dcsaorg/DCSA_TNT'>Track &amp; Trace (TNT)</a>)
    - Equipment Events (used by <a href='https://app.swaggerhub.com/apis/dcsaorg/DCSA_TNT'>Track &amp; Trace (TNT)</a>)
    - Transport Events (used by <a href='https://app.swaggerhub.com/apis/dcsaorg/DCSA_OVS'>Operational Vessel Schedules (OVS)</a> and <a href='https://app.swaggerhub.com/apis/dcsaorg/DCSA_TNT'>Track &amp; Trace (TNT)</a>)
    - Operations Events (to be used by <a href='https://app.swaggerhub.com/apis/dcsaorg/DCSA_OVS'>Operational Vessel Schedules (OVS)</a>)
    
    This API is an aggregation of:
    - <a href='https://app.swaggerhub.com/apis/dcsaorg/DOCUMENTATION_EVENT_HUB'>Documentation Event Hub</a> (event and subscription handling for Shipment events used by Electronic Bill of Lading)
    - <a href='https://app.swaggerhub.com/apis/dcsaorg/OVS_EVENT_HUB'>OVS Event Hub</a> (event and subscription handling for Transport- and Operation-Events used by Operational Vessel Schedules)
    - <a href='https://app.swaggerhub.com/apis/dcsaorg/DCSA_TNT'>T&amp;T</a> (event and subscription handling for Shipment-, Transport- and Equipment-Events)
tags:
  - name: Events
    description: Event operations
  - name: Subscriptions
    description: Subscription operations
paths:
  /events:
    get:
      tags:
        - Events
      summary: Find events.
      description: Returns all events filtered by the parameters.
      parameters:
        # OBS: Be aware that changing the parameters requires a manual change in other APIs

        # The eventType parameter is needed when more than one Event type can be returned
        - in: query
          name: eventType
          description: 'The type of event(s) to filter by. Default value is all event types if no value(s) is selected. It is possible to select any combination of values by comma separating values'
          required: false
          schema:
            $ref: '#/components/schemas/eventTypeList'

        # Chunk with Shipment related event parameters
        - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/EVENT_DOMAIN/1.0.0#/components/parameters/carrierBookingReferenceQueryParam'
        - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/EVENT_DOMAIN/1.0.0#/components/parameters/bookingReferenceQueryParam'
        - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/EVENT_DOMAIN/1.0.0#/components/parameters/transportDocumentIDQueryParam'

        # Chunk with Equipment related event parameters
        - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/EVENT_DOMAIN/1.0.0#/components/parameters/equipmentReferenceQueryParam'

        # Chunk with Transport related event parameters
        - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/EVENT_DOMAIN/1.0.0#/components/parameters/scheduleIDQueryParam'
        - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/EVENT_DOMAIN/1.0.0#/components/parameters/transportCallIDQueryParam'

        # Chunk with Operations related event parameters
        
        # Chunk with event parameters needed to be included in all APIs
        - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/1.0.0#/components/parameters/limitQueryParam'
        - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/1.0.0#/components/parameters/cursorQueryParam'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/events'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: 'https://api.swaggerhub.com/domains/dcsaorg/ERROR_DOMAIN/1.0.0#/components/schemas/error'
  /events/{eventID}:
    get:
      tags:
        - Events
      summary: Find events by eventID.
      description: Returns event with the specified eventID.
      parameters:
        - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/EVENT_DOMAIN/1.0.0#/components/parameters/eventIDPathParam'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/EVENT_DOMAIN/1.0.0#/components/schemas/shipmentEvent'
                  - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/EVENT_DOMAIN/1.0.0#/components/schemas/transportEvent'
                  - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/EVENT_DOMAIN/1.0.0#/components/schemas/equipmentEvent'
                  - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/EVENT_DOMAIN/1.0.0#/components/schemas/operationsEvent'
                discriminator:
                  propertyName: eventType
                #Couldn't use $ref in this example. Should be updated manually if shipmentEvent changes
                example:
                  eventID: '84db923d-2a19-4eb0-beb5-446c1ec57d34'
                  eventType: 'SHIPMENT'
                  eventCreatedDateTime: '2019-11-12T07:41:00+08:30'
                  eventSubtype: 'ISSU'
                  documentID: '84db923d-2a19-4eb0-beb5-446c1ec57d34'
                  shipmentInformationType: "TRD"
                  reason: 'All good'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: 'https://api.swaggerhub.com/domains/dcsaorg/ERROR_DOMAIN/1.0.0#/components/schemas/error'

  /event-subscriptions:
    get:
      tags:
      - Subscriptions
      summary: Receive a list of your active subscriptions
      responses:
        '200':
          description: Returns a list of subscriptions
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/subscription'
    post:
      tags:
      - Subscriptions
      summary: Create a subscription
      requestBody:
        description: 'Parameters used to configure the subscription. It is possible to only receive cirtain types of events by adding filter values to the subscription.'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/subscriptionBody'
      responses:
        '201':
          description: Subscription created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/subscription'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: 'https://api.swaggerhub.com/domains/dcsaorg/ERROR_DOMAIN/1.0.0#/components/schemas/error'
      callbacks:
        event:
          '{$request.body.callbackUrl}':
            post:   # Method
              parameters:
                - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/EVENT_DOMAIN/1.0.0#/components/parameters/signatureHeaderParam'
                - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/EVENT_DOMAIN/1.0.0#/components/parameters/subscriptionIDHeaderParam'
              requestBody: # Contents of the callback message
                required: true
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/events'
              responses:   # Expected responses to the callback message
                '200':
                  description: 'Your server returns this code if it accepts the callback'
  /event-subscriptions/{subscriptionID}:
    get:
      tags:
      - Subscriptions
      summary: Find a subscription by subscription ID
      parameters:
        - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/EVENT_DOMAIN/1.0.0#/components/parameters/subscriptionIDPathParam'
      responses:
        '200':
          description: Subscription returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/subscription'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: 'https://api.swaggerhub.com/domains/dcsaorg/ERROR_DOMAIN/1.0.0#/components/schemas/error'
    delete:
      tags:
      - Subscriptions
      summary: Stop a subscription, using the subscription ID
      parameters:
        - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/EVENT_DOMAIN/1.0.0#/components/parameters/subscriptionIDPathParam'
      responses:
        '204':
          description: Subscription stopped
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: 'https://api.swaggerhub.com/domains/dcsaorg/ERROR_DOMAIN/1.0.0#/components/schemas/error'
    put:
      tags:
      - Subscriptions
      summary: Alter a subscription
      parameters:
        - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/EVENT_DOMAIN/1.0.0#/components/parameters/subscriptionIDPathParam'
      requestBody:
        description: Parameters used to configure the subscription
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/subscription'
      responses:
        '200':
          description: Subscription updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/subscription'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: 'https://api.swaggerhub.com/domains/dcsaorg/ERROR_DOMAIN/1.0.0#/components/schemas/error'


components:

  ##############################
  # All events and subscriptions
  ##############################

  schemas:

    events:
      type: array
      items:
        anyOf:
          - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/EVENT_DOMAIN/1.0.0#/components/schemas/shipmentEvent'
          - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/EVENT_DOMAIN/1.0.0#/components/schemas/transportEvent'
          - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/EVENT_DOMAIN/1.0.0#/components/schemas/equipmentEvent'
          - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/EVENT_DOMAIN/1.0.0#/components/schemas/operationsEvent'

    eventType:
      type: string
      description: 'The Event Type of the object - to be used as a discriminator.'
      enum:
        - EQUIPMENT
        - SHIPMENT
        - TRANSPORT
        - OPERATIONS
    eventTypeList:
      description: 'A list of event types. Default is all events.'
      example: [EQUIPMENT,SHIPMENT,TRANSPORT,OPERATIONS]
      default: [EQUIPMENT,SHIPMENT,TRANSPORT,OPERATIONS]
      type: array
      items:
        $ref: '#/components/schemas/eventType'

    subscriptionBody:
      type: object
      allOf:
        - type: object
          properties:
            callbackUrl:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/EVENT_DOMAIN/1.0.0#/components/schemas/callbackUrl'
        - type: object
          properties:
            eventType:
              $ref: '#/components/schemas/eventType'
        - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/EVENT_DOMAIN/1.0.0#/components/schemas/shipmentSubscriptionBody'
        - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/EVENT_DOMAIN/1.0.0#/components/schemas/transportSubscriptionBody'
        - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/EVENT_DOMAIN/1.0.0#/components/schemas/equipmentSubscriptionBody'
        - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/EVENT_DOMAIN/1.0.0#/components/schemas/operationsSubscriptionBody'
      required:
        - callbackUrl

    subscription:
      type: object
      allOf:
        - type: object
          properties:
            subscriptionID:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/EVENT_DOMAIN/1.0.0#/components/schemas/subscriptionID'
        - $ref: '#/components/schemas/subscriptionBody'
